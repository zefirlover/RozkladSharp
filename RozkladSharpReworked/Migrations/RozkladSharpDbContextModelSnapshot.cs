// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RozkladSharp.DomainServices;

namespace RozkladSharpReworked.Migrations
{
    [DbContext(typeof(RozkladSharpDbContext))]
    partial class RozkladSharpDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("RozkladSharp.Domain.Models.Lection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("LectionDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentSheduleId")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherSheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LectionDetailId")
                        .IsUnique();

                    b.HasIndex("StudentSheduleId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherSheduleId");

                    b.ToTable("Lections");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.LectionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cabinet")
                        .HasColumnType("text");

                    b.Property<bool>("IsLaboratory")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPractice")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderInShedule")
                        .HasColumnType("integer");

                    b.Property<string>("StudentsGroup")
                        .HasColumnType("text");

                    b.Property<int>("WeekdayInShedule")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LectionDetails");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("StudentSheduleId")
                        .HasColumnType("integer");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StudentSheduleId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.StudentShedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("StudentShedules");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RankId")
                        .HasColumnType("integer");

                    b.Property<int>("TeacherSheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.HasIndex("TeacherSheduleId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.TeacherShedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("TeacherShedules");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Lection", b =>
                {
                    b.HasOne("RozkladSharp.Domain.Models.LectionDetail", "LectionDetail")
                        .WithOne("Lection")
                        .HasForeignKey("RozkladSharp.Domain.Models.Lection", "LectionDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladSharp.Domain.Models.StudentShedule", "StudentShedule")
                        .WithMany("Lections")
                        .HasForeignKey("StudentSheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladSharp.Domain.Models.Subject", "Subject")
                        .WithMany("Lections")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladSharp.Domain.Models.TeacherShedule", "TeacherShedule")
                        .WithMany("Lections")
                        .HasForeignKey("TeacherSheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LectionDetail");

                    b.Navigation("StudentShedule");

                    b.Navigation("Subject");

                    b.Navigation("TeacherShedule");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Student", b =>
                {
                    b.HasOne("RozkladSharp.Domain.Models.StudentShedule", "StudentShedule")
                        .WithOne("Student")
                        .HasForeignKey("RozkladSharp.Domain.Models.Student", "StudentSheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentShedule");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Teacher", b =>
                {
                    b.HasOne("RozkladSharp.Domain.Models.Rank", "Rank")
                        .WithMany("Teachers")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RozkladSharp.Domain.Models.TeacherShedule", "TeacherShedule")
                        .WithOne("Teacher")
                        .HasForeignKey("RozkladSharp.Domain.Models.Teacher", "TeacherSheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rank");

                    b.Navigation("TeacherShedule");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.LectionDetail", b =>
                {
                    b.Navigation("Lection");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Rank", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.StudentShedule", b =>
                {
                    b.Navigation("Lections");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.Subject", b =>
                {
                    b.Navigation("Lections");
                });

            modelBuilder.Entity("RozkladSharp.Domain.Models.TeacherShedule", b =>
                {
                    b.Navigation("Lections");

                    b.Navigation("Teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
